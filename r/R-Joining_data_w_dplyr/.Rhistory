knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
load("data/sets.rds")
sets = load("data/sets.rds")
data("data/sets.rds")
sets = data("data/sets.rds")
themes = data("data/themes.rds")
sets = readRDS("data/sets.rds")
themes = readRDS("data/themes.rds")
# Overview data summary
library(summarytools)
print(dfSummary(sets, graph.magnif = 0.75), method = 'render')
print(dfSummary(themes, graph.magnif = 0.75), method = 'render')
print(dfSummary(sets[-c(1,4)], graph.magnif = 0.75), method = 'render')
sets = readRDS("data/sets.rds")
themes = readRDS("data/themes.rds")
head(sets)
head(themes)
# Inner join
sets %>%
inner_join(themes, by = c("theme_id" = "id"))
# Inner join
sets %>%
inner_join(themes, by = c("theme_id" = "id"), suffix = c("_set", "_theme"))
# Inner join
sets %>%
inner_join(themes, by = c("theme_id" = "id"))
sets %>%
inner_join(themes, by = c("theme_id" = "id"), suffix = c("_set", "_theme")) %>%
count(name_theme, sort = TRUE)
parts = readRDS("data/parts.rds")
part_categoris = readRDS("data/part_categories.rds")
head(parts)
head(part_categoris)
rm(part*)
rm(parts)
rm(part_categoris)
inventories = readRDS("data/inventories.rds")
head(inventories)
sets %>%
inner_join(inventories, by = "set_num")
sets %>%
inner_join(inventories, by = "set_num") %>%
kable()
# Beautiful table presentation
library(knitr)
sets %>%
inner_join(inventories, by = "set_num") %>%
kable()
sets %>%
inner_join(inventories, by = "set_num")
sets %>%
inner_join(inventories, by = "set_num") %>%
filter(version == 1)
sets %>%
inner_join(inventories, by = "set_num") %>%
inner_join(themes, by = c("theme_id" = "id"), suffix = c("_set", "_theme"))
inventory_parts_joined <- inventories %>%
inner_join(inventory_parts, by = c("id" = "inventory_id")) %>%
select(-id, -version) %>%
arrange(desc(quantity))
inventory_parts = readRDS("data/inventory_parts.rds")
inventory_parts_joined <- inventories %>%
inner_join(inventory_parts, by = c("id" = "inventory_id")) %>%
select(-id, -version) %>%
arrange(desc(quantity))
# Filter for LEGO sets
batmobile <- inventory_parts_joined %>%
filter(set_num == "7784-1") %>%
select(-set_num)
batwing <- inventory_parts_joined %>%
filter(set_num == "70916-1") %>%
select(-set_num)
head(batmobile)
head(batwing)
batmobile %>%
inner_join(batwing, by = c("part_num", "color_id"), suffix = c("_batmobile", "_batwing"))
batmobile %>%
left_join(batwing, by = c("part_num", "color_id"), suffix = c("_batmobile", "_batwing"))
# To use replace_na()
library(tidyr)
batmobile %>%
left_join(batwing, by = c("part_num", "color_id"), suffix = c("_batmobile", "_batwing"))
batmobile %>%
right_join(batwing, by = c("part_num", "color_id"), suffix = c("_batmobile", "_batwing"))
sets %>%
count(theme_id, sort = TRUE) %>%
inner_join(themes, by = c("theme_id" = "id"))
sets %>%
count(theme_id, sort = TRUE) %>%
right_join(themes, by = c("theme_id" = "id"))
sets %>%
count(theme_id, sort = TRUE) %>%
inner_join(themes, by = c("theme_id" = "id"))
sets %>%
count(theme_id, sort = TRUE) %>%
right_join(themes, by = c("theme_id" = "id")) %>%
replace_na(list(n = 0))
themes
themes %>%
inner_join(themes, by = c("parent_id" = "id"), suffix = c("_child", "_parent"))
themes %>%
inner_join(themes, by = c("parent_id"="id"), suffix = c("_child","_parent")) %>%
filter(name_child == "The Lord of the Rings")
themes %>%
inner_join(themes, by = c("parent_id"="id"), suffix = c("_child","_parent")) %>%
filter(name_parent == "The Lord of the Rings")
themes %>%
# Inner join the themes table
inner_join(themes, by = c("id"="parent_id"), suffix = c("_parent","_child")) %>%
# Filter for the "Harry Potter" parent name
filter(name_parent == "Harry Potter")
# Join themes to itself again to find the grandchild relationships
themes %>%
inner_join(themes, by = c("id" = "parent_id"), suffix = c("_parent", "_child")) %>%
inner_join(themes, by = c("id_child" = "parent_id"), suffix = c("_parent","_grandchild"))
themes %>%
# Left join the themes table to its own children
left_join(themes, by = c("id"="parent_id"), suffix = c("_parent","_child")) %>%
# Filter for themes that have no child themes
filter(is.na(name_child))
batmobile %>%
full_join(batwing, by = c("part_num", "color_id"), suffix = c("_batmobile", "_batwing"))
batmobile %>%
full_join(batwing, by = c("part_num", "color_id"), suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(quantity_batmobile = 0,
quantity_batwing = 0))
sum(c(30, NA, 20))
x <- c("Thu", "Tue", "Wed", "Thu", "Wed")
factor(x)
batmobile %>%
semi_join(batwing, by = c("color_id", "part_num"))
batmobile %>%
anti_join(batwing, by = c("color_id", "part_num"))
themes %>%
semi_join(sets, by = c("id" = "theme_id"))
themes %>%
anti_join(sets, by = c("id" = "theme_id"))
# Aggregating sets into colors
batmobile_colors <- batmobile %>%
group_by(color_id) %>%
summarize(total = sum(quantity))
batmobile_colors
batwing_colors <- batwing %>%
group_by(color_id) %>%
summarize(total = sum(quantity))
batwing_colors
colors_joined <- batmobile_colors %>%
full_join(batwing_colors, by = "color_id", suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(total_batmobile = 0, total_batwing = 0)) %>%
inner_join(colors, by = c("color_id" = "id")) %>%
mutate(total_batmobile = total_batmobile / sum(total_batmobile),
total_batwing = total_batwing / sum(total_batwing),
difference = total_batmobile - total_batwing)
colors_joined <- batmobile_colors %>%
full_join(batwing_colors, by = "color_id", suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(total_batmobile = 0, total_batwing = 0)) %>%
inner_join(colors, by = c("color_id" = "id")) %>%
mutate(total_batmobile = total_batmobile / sum(total_batmobile),
total_batwing = total_batwing / sum(total_batwing),
difference = total_batmobile - total_batwing)
batmobile_colors %>%
full_join(batwing_colors, by = "color_id", suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(total_batmobile = 0, total_batwing = 0)) %>%
inner_join(colors, by = c("color_id" = "id")) %>%
mutate(total_batmobile = total_batmobile / sum(total_batmobile),
total_batwing = total_batwing / sum(total_batwing),
difference = total_batmobile - total_batwing)
batmobile_colors %>%
full_join(batwing_colors, by = "color_id", suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(total_batmobile = 0, total_batwing = 0)) %>%
inner_join(colors, by = c("color_id" = "id"))
batmobile_colors %>%
full_join(batwing_colors, by = "color_id", suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(total_batmobile = 0, total_batwing = 0))
colors <- readRDS("data/colors.rds")
colors_joined <- batmobile_colors %>%
full_join(batwing_colors, by = "color_id", suffix = c("_batmobile", "_batwing")) %>%
replace_na(list(total_batmobile = 0, total_batwing = 0)) %>%
inner_join(colors, by = c("color_id" = "id")) %>%
mutate(total_batmobile = total_batmobile / sum(total_batmobile),
total_batwing = total_batwing / sum(total_batwing),
difference = total_batmobile - total_batwing)
colors_joined
# Data visualization
library(ggplot2)
library(forcats)
color_palette <- setNames(colors_joined$rgb, colors_joined$name)
colors_joined %>%
mutate(name = fct_reorder(name, difference)) %>%
ggplot(aes(name, difference, fill = name)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = color_palette, guide = FALSE)
# Applies classic ggplot2 theme
theme_set(theme_classic())
color_palette <- setNames(colors_joined$rgb, colors_joined$name)
colors_joined %>%
mutate(name = fct_reorder(name, difference)) %>%
ggplot(aes(name, difference, fill = name)) +
geom_col() +
coord_flip() +
scale_fill_manual(values = color_palette, guide = FALSE)
questions = readRDS("data/questions.rds")
question_tags = readRDS("data/question_tags.rds")
tags = readRDS("data/tags.rds")
